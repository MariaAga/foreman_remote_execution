// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HostsAndInputs rendering 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <HostsAndInputs
    selectedHosts={
      Array [
        "host1",
      ]
    }
    setSelectedHosts={[MockFunction]}
    setTemplateValues={[MockFunction]}
    templateValues={Object {}}
  >
    <Title
      className="wizard-title"
      headingLevel="h2"
    >
      <h2
        className="pf-c-title pf-m-xl wizard-title"
      >
        Target hosts and inputs
      </h2>
    </Title>
    <Form>
      <form
        className="pf-c-form"
        noValidate={true}
      >
        <mockConstructor
          fieldId="host_selection"
        >
          <div
            props={
              Object {
                "children": Array [
                  <SelectField
                    fieldId="host_methods"
                    label={null}
                    options={
                      Array [
                        "Hosts",
                        "Host collection",
                        "Host group",
                        "Search query",
                      ]
                    }
                    setValue={[Function]}
                    value="Hosts"
                  />,
                  <SelectedChips
                    selected={
                      Array [
                        "host1",
                      ]
                    }
                    setSelected={[MockFunction]}
                  />,
                ],
                "fieldId": "host_selection",
              }
            }
          />
        </mockConstructor>
        <span>
          Apply to
           
          <Button
            isInline={true}
            variant="link"
          >
            <button
              aria-disabled={false}
              aria-label={null}
              className="pf-c-button pf-m-link pf-m-inline"
              data-ouia-component-id="OUIA-Generated-Button-link-1"
              data-ouia-component-type="PF4/Button"
              data-ouia-safe={true}
              disabled={false}
              role={null}
              type="button"
            >
              1
               
              hosts
            </button>
          </Button>
        </span>
        <TemplateInputs
          inputs={Array []}
          setValue={[MockFunction]}
          value={Object {}}
        >
          <p
            className="gray-text"
          >
            There are no available input fields for the selected template.
          </p>
        </TemplateInputs>
      </form>
    </Form>
  </HostsAndInputs>
</Provider>
`;
